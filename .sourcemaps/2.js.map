{"version":3,"sources":["../../src/pages/update-info/update-shop.module.ts","../../src/pages/update-info/update-shop.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { UpdateShopPage } from './update-shop';\n\n@NgModule({\n  declarations: [\n    UpdateShopPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(UpdateShopPage),\n  ],\n  exports: [\n    UpdateShopPage\n  ]\n})\nexport class UpdateShopPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/update-info/update-shop.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ActionSheetController, ModalController, ViewController } from 'ionic-angular';\n\nimport { AppService } from '../../services/app.service';\nimport { ImageService } from '../../services/image.service';\nimport { DbService } from '../../services/db.service';\n// import { LocalService } from '../../services/local.service';\nimport { CrudService } from '../../services/crud.service';\nimport { iShop } from '../../interfaces/shop.interface';\nimport { iProfile } from '../../interfaces/profile.interface';\n\n@IonicPage()\n@Component({\n  selector: 'page-update-shop',\n  templateUrl: 'update-shop.html',\n})\nexport class UpdateShopPage {\n  data: any;\n  SHOP: iShop = null;\n  PROFILE: iProfile;\n  base64Images: any[];\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    private actionSheetCtrl: ActionSheetController,\n    private modalCtrl: ModalController,\n    private viewCtrl: ViewController,\n    private imageService: ImageService,\n    private dbService: DbService,\n    private appService: AppService,\n    // private localService: LocalService,\n    private crudService: CrudService\n  ) {\n    this.data = this.navParams.data;\n    this.SHOP = this.data.SHOP;\n    this.PROFILE = this.data.PROFILE;\n    if(typeof(this.SHOP) =='undefined'){\n      this.SHOP = null\n    }\n    console.log(this.SHOP);\n    console.log(this.data);\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad UpdateInfoPage');\n  }\n\n  clickImage(image, i){\n    console.log(image, i)\n    let actionSheet = this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: 'Delete this photo',\n          role: 'destructive',\n          handler: () => {\n            console.log('Delete clicked');\n            this.removePhoto(image, i);\n          }\n        },{\n          text: 'Add new photos',\n          handler: () => {\n            console.log('Add new clicked');\n            this.takePhotos();\n          }\n        },{\n          text: 'Cancel',\n          role: 'cancel',\n          handler: () => {\n            console.log('Cancel clicked');\n          }\n        }\n      ]\n    });\n    actionSheet.present();\n  }\n\n  takePhotos(){\n    this.selectPhotosByBrowser();\n  }\n\n  selectPhotosByBrowser(){\n    document.getElementById('inputFile').click();\n  }\n\n  takePictureAndResizeByBrowser(event) {\n    this.imageService.resizeImagesFromChoosenFilesReturnPromiseWithArrayOfImageDataUrls(event)\n      .then((imgDataUrls: string[]) => {\n        setTimeout(() => {\n          console.log(imgDataUrls);\n          this.base64Images = imgDataUrls;\n          let NAME = new Date().getTime().toString();\n          this.dbService.uploadBase64Images2FBReturnPromiseWithArrayOfURL('ShopImages/' + this.SHOP.SHOP_ID, this.base64Images, NAME)\n          .then((urls)=>{\n            // add this.SHOP.SHOP_IMAGES then update to db\n            this.SHOP.SHOP_IMAGES = this.SHOP.SHOP_IMAGES.concat(urls);\n            this.dbService.updateAnObjectAtNode('Shops/' + this.SHOP.SHOP_ID + '/SHOP_IMAGES', this.SHOP.SHOP_IMAGES)\n          })\n        }, 1000);\n      })\n  }\n\n  removePhoto(image, i){\n    this.SHOP.SHOP_IMAGES.splice(i,1);\n    // update db. Remember to delete removed image from firebase storage\n    this.dbService.deleteFileFromFireStorageWithHttpsURL(image).then((res)=>{\n      console.log(res);\n    }).catch((err)=> console.log(err))\n    this.dbService.updateAnObjectAtNode('Shops/' + this.SHOP.SHOP_ID + '/SHOP_IMAGES', this.SHOP.SHOP_IMAGES);\n  }\n\n  update(){\n    this.crudService.updateShop(this.SHOP);\n  }\n\n  updateLocation(){\n    let mapModal = this.modalCtrl.create('LocationPage',{ CURRENT_LOCATION: this.SHOP.SHOP_LOCATION});\n    mapModal.onDidDismiss(data=>{\n      console.log(data);\n      this.SHOP.SHOP_LOCATION = data.NEW_LOCATION;\n    });\n    mapModal.present();\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/update-info/update-shop.ts"],"sourceRoot":""}